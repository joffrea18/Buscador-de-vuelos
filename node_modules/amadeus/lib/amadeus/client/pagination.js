"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
/**
 * A helper library for handling pagination.
 *
 * @param {Client} client the client to make the API calls against
 * @protected
 */
var Pagination = /*#__PURE__*/function () {
  function Pagination(client) {
    _classCallCheck(this, Pagination);
    this.client = client;
  }

  /**
   * Fetch the page for the given page name, and make the next API call based on
   * the previous request made.
   *
   * @param  {type} pageName the name of the page to fetch, should be available
   *    as a link in the meta links in the response
   * @param  {type} response the response containing the links to the next pages,
   *   and the request used to make the previous call
   * @return {Promise.<Response,ResponseError>} a Bluebird Promise
   * @protected
   */
  _createClass(Pagination, [{
    key: "page",
    value: function page(pageName, response) {
      var pageNumber = this.pageNumber(response, pageName);
      if (pageNumber) {
        return this.call(response.request, pageNumber);
      } else {
        return this.nullPromise();
      }
    }

    // PRIVATE

    /**
     * Makes a new call for the new page number
     *
     * @param  {type} request    the request used to make the previous call
     * @param  {type} pageNumber the page number to fetch
     * @return {Promise.<Response,ResponseError>} a Bluebird Promise
     * @private
     */
  }, {
    key: "call",
    value: function call(request, pageNumber) {
      var params = request.params || {};
      params['page'] = params['page'] || {};
      params['page']['offset'] = pageNumber;
      return this.client.request(request.verb, request.path, params);
    }

    /**
     * Tries to determine the page number from the page name. If not present, it
     * just returns null
     *
     * @param  {type} response the response containing the links to the next pages
     * @param  {type} pageName the name of the page to fetch
     * @return {number}
     * @private
     */
  }, {
    key: "pageNumber",
    value: function pageNumber(response, pageName) {
      try {
        return response.result['meta']['links'][pageName].split('page%5Boffset%5D=')[1].split('&')[0];
      } catch (TypeError) {
        return null;
      }
    }

    /**
     * Returns a Promise that always resolves to null
     *
     * @return {Promise} a Promise that always resolves to null
     * @private
     */
  }, {
    key: "nullPromise",
    value: function nullPromise() {
      return new Promise(function (resolve) {
        resolve(null);
      });
    }
  }]);
  return Pagination;
}();
var _default = Pagination;
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQYWdpbmF0aW9uIiwiY2xpZW50IiwicGFnZU5hbWUiLCJyZXNwb25zZSIsInBhZ2VOdW1iZXIiLCJjYWxsIiwicmVxdWVzdCIsIm51bGxQcm9taXNlIiwicGFyYW1zIiwidmVyYiIsInBhdGgiLCJyZXN1bHQiLCJzcGxpdCIsIlR5cGVFcnJvciIsIlByb21pc2UiLCJyZXNvbHZlIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2FtYWRldXMvY2xpZW50L3BhZ2luYXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIGhlbHBlciBsaWJyYXJ5IGZvciBoYW5kbGluZyBwYWdpbmF0aW9uLlxuICpcbiAqIEBwYXJhbSB7Q2xpZW50fSBjbGllbnQgdGhlIGNsaWVudCB0byBtYWtlIHRoZSBBUEkgY2FsbHMgYWdhaW5zdFxuICogQHByb3RlY3RlZFxuICovXG5jbGFzcyBQYWdpbmF0aW9uIHtcbiAgY29uc3RydWN0b3IoY2xpZW50KSB7XG4gICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gIH1cblxuICAvKipcbiAgICogRmV0Y2ggdGhlIHBhZ2UgZm9yIHRoZSBnaXZlbiBwYWdlIG5hbWUsIGFuZCBtYWtlIHRoZSBuZXh0IEFQSSBjYWxsIGJhc2VkIG9uXG4gICAqIHRoZSBwcmV2aW91cyByZXF1ZXN0IG1hZGUuXG4gICAqXG4gICAqIEBwYXJhbSAge3R5cGV9IHBhZ2VOYW1lIHRoZSBuYW1lIG9mIHRoZSBwYWdlIHRvIGZldGNoLCBzaG91bGQgYmUgYXZhaWxhYmxlXG4gICAqICAgIGFzIGEgbGluayBpbiB0aGUgbWV0YSBsaW5rcyBpbiB0aGUgcmVzcG9uc2VcbiAgICogQHBhcmFtICB7dHlwZX0gcmVzcG9uc2UgdGhlIHJlc3BvbnNlIGNvbnRhaW5pbmcgdGhlIGxpbmtzIHRvIHRoZSBuZXh0IHBhZ2VzLFxuICAgKiAgIGFuZCB0aGUgcmVxdWVzdCB1c2VkIHRvIG1ha2UgdGhlIHByZXZpb3VzIGNhbGxcbiAgICogQHJldHVybiB7UHJvbWlzZS48UmVzcG9uc2UsUmVzcG9uc2VFcnJvcj59IGEgQmx1ZWJpcmQgUHJvbWlzZVxuICAgKiBAcHJvdGVjdGVkXG4gICAqL1xuICBwYWdlKHBhZ2VOYW1lLCByZXNwb25zZSkge1xuICAgIGxldCBwYWdlTnVtYmVyID0gdGhpcy5wYWdlTnVtYmVyKHJlc3BvbnNlLCBwYWdlTmFtZSk7XG5cbiAgICBpZiAocGFnZU51bWJlcikge1xuICAgICAgcmV0dXJuIHRoaXMuY2FsbChyZXNwb25zZS5yZXF1ZXN0LCBwYWdlTnVtYmVyKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMubnVsbFByb21pc2UoKTtcbiAgICB9XG4gIH1cblxuICAvLyBQUklWQVRFXG5cblxuICAvKipcbiAgICogTWFrZXMgYSBuZXcgY2FsbCBmb3IgdGhlIG5ldyBwYWdlIG51bWJlclxuICAgKlxuICAgKiBAcGFyYW0gIHt0eXBlfSByZXF1ZXN0ICAgIHRoZSByZXF1ZXN0IHVzZWQgdG8gbWFrZSB0aGUgcHJldmlvdXMgY2FsbFxuICAgKiBAcGFyYW0gIHt0eXBlfSBwYWdlTnVtYmVyIHRoZSBwYWdlIG51bWJlciB0byBmZXRjaFxuICAgKiBAcmV0dXJuIHtQcm9taXNlLjxSZXNwb25zZSxSZXNwb25zZUVycm9yPn0gYSBCbHVlYmlyZCBQcm9taXNlXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBjYWxsKHJlcXVlc3QsIHBhZ2VOdW1iZXIpIHtcbiAgICBsZXQgcGFyYW1zID0gcmVxdWVzdC5wYXJhbXMgfHwge307XG4gICAgcGFyYW1zWydwYWdlJ10gPSBwYXJhbXNbJ3BhZ2UnXSB8fCB7fTtcbiAgICBwYXJhbXNbJ3BhZ2UnXVsnb2Zmc2V0J10gPSBwYWdlTnVtYmVyO1xuXG4gICAgcmV0dXJuIHRoaXMuY2xpZW50LnJlcXVlc3QoXG4gICAgICByZXF1ZXN0LnZlcmIsXG4gICAgICByZXF1ZXN0LnBhdGgsXG4gICAgICBwYXJhbXNcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIFRyaWVzIHRvIGRldGVybWluZSB0aGUgcGFnZSBudW1iZXIgZnJvbSB0aGUgcGFnZSBuYW1lLiBJZiBub3QgcHJlc2VudCwgaXRcbiAgICoganVzdCByZXR1cm5zIG51bGxcbiAgICpcbiAgICogQHBhcmFtICB7dHlwZX0gcmVzcG9uc2UgdGhlIHJlc3BvbnNlIGNvbnRhaW5pbmcgdGhlIGxpbmtzIHRvIHRoZSBuZXh0IHBhZ2VzXG4gICAqIEBwYXJhbSAge3R5cGV9IHBhZ2VOYW1lIHRoZSBuYW1lIG9mIHRoZSBwYWdlIHRvIGZldGNoXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIHBhZ2VOdW1iZXIocmVzcG9uc2UsIHBhZ2VOYW1lKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiByZXNwb25zZS5yZXN1bHRbJ21ldGEnXVsnbGlua3MnXVtwYWdlTmFtZV1cbiAgICAgICAgLnNwbGl0KCdwYWdlJTVCb2Zmc2V0JTVEPScpWzFdLnNwbGl0KCcmJylbMF07XG4gICAgfSBjYXRjaCAoVHlwZUVycm9yKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIFByb21pc2UgdGhhdCBhbHdheXMgcmVzb2x2ZXMgdG8gbnVsbFxuICAgKlxuICAgKiBAcmV0dXJuIHtQcm9taXNlfSBhIFByb21pc2UgdGhhdCBhbHdheXMgcmVzb2x2ZXMgdG8gbnVsbFxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgbnVsbFByb21pc2UoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHsgcmVzb2x2ZShudWxsKTsgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFnaW5hdGlvbjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEEsSUFNTUEsVUFBVTtFQUNkLG9CQUFZQyxNQUFNLEVBQUU7SUFBQTtJQUNsQixJQUFJLENBQUNBLE1BQU0sR0FBR0EsTUFBTTtFQUN0Qjs7RUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBVkU7SUFBQTtJQUFBLE9BV0EsY0FBS0MsUUFBUSxFQUFFQyxRQUFRLEVBQUU7TUFDdkIsSUFBSUMsVUFBVSxHQUFHLElBQUksQ0FBQ0EsVUFBVSxDQUFDRCxRQUFRLEVBQUVELFFBQVEsQ0FBQztNQUVwRCxJQUFJRSxVQUFVLEVBQUU7UUFDZCxPQUFPLElBQUksQ0FBQ0MsSUFBSSxDQUFDRixRQUFRLENBQUNHLE9BQU8sRUFBRUYsVUFBVSxDQUFDO01BQ2hELENBQUMsTUFBTTtRQUNMLE9BQU8sSUFBSSxDQUFDRyxXQUFXLEVBQUU7TUFDM0I7SUFDRjs7SUFFQTs7SUFHQTtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBUEU7SUFBQTtJQUFBLE9BUUEsY0FBS0QsT0FBTyxFQUFFRixVQUFVLEVBQUU7TUFDeEIsSUFBSUksTUFBTSxHQUFHRixPQUFPLENBQUNFLE1BQU0sSUFBSSxDQUFDLENBQUM7TUFDakNBLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBR0EsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztNQUNyQ0EsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxHQUFHSixVQUFVO01BRXJDLE9BQU8sSUFBSSxDQUFDSCxNQUFNLENBQUNLLE9BQU8sQ0FDeEJBLE9BQU8sQ0FBQ0csSUFBSSxFQUNaSCxPQUFPLENBQUNJLElBQUksRUFDWkYsTUFBTSxDQUNQO0lBQ0g7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBUkU7SUFBQTtJQUFBLE9BU0Esb0JBQVdMLFFBQVEsRUFBRUQsUUFBUSxFQUFFO01BQzdCLElBQUk7UUFDRixPQUFPQyxRQUFRLENBQUNRLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQ1QsUUFBUSxDQUFDLENBQzlDVSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0EsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztNQUNoRCxDQUFDLENBQUMsT0FBT0MsU0FBUyxFQUFFO1FBQ2xCLE9BQU8sSUFBSTtNQUNiO0lBQ0Y7O0lBRUE7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBTEU7SUFBQTtJQUFBLE9BTUEsdUJBQWM7TUFDWixPQUFPLElBQUlDLE9BQU8sQ0FBQyxVQUFTQyxPQUFPLEVBQUU7UUFBRUEsT0FBTyxDQUFDLElBQUksQ0FBQztNQUFFLENBQUMsQ0FBQztJQUMxRDtFQUFDO0VBQUE7QUFBQTtBQUFBLGVBR1lmLFVBQVU7QUFBQTtBQUFBIn0=